{{>licenseInfo}}

package {{package}};

import {{invokerPackage}}.ApiException;
{{#imports}}import {{import}};
{{/imports}}
import org.junit.Test;
import org.junit.Ignore;

{{^fullJavaUtil}}
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
{{/fullJavaUtil}}

/**
 * API tests for {{classname}}
 */
@Ignore
public class {{classname}}Test {

    private final {{classname}} api = new {{classname}}();

    {{#operations}}
    {{#operation}}
    {{#contents}}
    {{#@first}}
    /**
     * {{summary}}
     *
     * {{notes}}
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void {{operationId}}Test() throws ApiException {
        {{#parameters}}
            {{{dataType}}} {{paramName}} = null;
        {{/parameters}}
    {{#vendorExtensions.x-parameterAsObject}}
        {{vendorExtensions.x-parameterAsObject}} params = new {{vendorExtensions.x-parameterAsObject}}({{#parameters}}{{paramName}}{{#has this 'more'}}, {{/has}}{{/parameters}});
        {{#returnType}}{{{returnType}}} response = {{/returnType}}api.{{operationId}}(params);
    {{/vendorExtensions.x-parameterAsObject}}
    {{^vendorExtensions.x-parameterAsObject}}
        {{#returnType}}{{{returnType}}} response = {{/returnType}}api.{{operationId}}({{#parameters}}{{paramName}}{{#has this 'more'}}, {{/has}}{{/parameters}});
    {{/vendorExtensions.x-parameterAsObject}}

        // TODO: test validations
    }
    {{/@first}}
    {{/contents}}
    {{/operation}}
    {{/operations}}
}
